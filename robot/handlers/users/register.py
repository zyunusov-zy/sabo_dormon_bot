from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton

from robot.states import RegisterStates, QuestionnaireStates

router = Router()


@router.message(RegisterStates.confirm_honesty, F.text == "‚úÖ –Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é —á–µ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö")
async def confirm_honesty(message: types.Message, state: FSMContext):
    await message.answer("–û—Ç–ª–∏—á–Ω–æ! –ù–∞–ø–∏—à–∏—Ç–µ –§.–ò.–û. (Ivanov Ivan Ivanovich):", reply_markup=ReplyKeyboardRemove())
    await state.set_state(RegisterStates.full_name)


@router.message(RegisterStates.confirm_honesty)
async def deny_honesty(message: types.Message, state: FSMContext):
    await message.answer("‚ùå –ë–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —á–µ—Å—Ç–Ω–æ—Å—Ç–∏ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å. –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç —Ä–∞–±–æ—Ç—É.")
    await state.clear()


@router.message(RegisterStates.full_name)
async def get_fullname_and_proceed(message: types.Message, state: FSMContext):
    await state.update_data(full_name=message.text)

    await message.answer(
        f"‚úÖ –°–ø–∞—Å–∏–±–æ, {message.text}!\n\n"
        "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —á–µ—Å—Ç–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã—Ö –≤–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö:\n"
        "üîí –≠—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ.\n\n"
        "‚òê –Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —è —É–∫–∞–∂—É –≤ —ç—Ç–æ–π –∞–Ω–∫–µ—Ç–µ, –±—É–¥—É—Ç —á–µ—Å—Ç–Ω—ã–º–∏, –ø—Ä–∞–≤–¥–∏–≤—ã–º–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.\n"
        "‚òê –Ø –æ—Å–æ–∑–Ω–∞—é, —á—Ç–æ –ª—é–±–∞—è –ø–æ–ø—ã—Ç–∫–∞ –æ–±–º–∞–Ω–∞, —Ñ–∞–ª—å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ–µ –∏—Å–∫–∞–∂–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ–≤ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–º—É –æ—Ç–∫–∞–∑—É –æ—Ç —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ, –∫–∞–∫ —Å–µ–π—á–∞—Å, —Ç–∞–∫ –∏ –≤ –±—É–¥—É—â–µ–º.\n\n"
        "üìÑ –ß–µ–º –±–æ–ª—å—à–µ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç–µ, —Ç–µ–º –≤—ã—à–µ —à–∞–Ω—Å—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –ø–æ–º–æ—â–∏.\n\n"
        "‚è±Ô∏è –°—Ä–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–Ω–∫–µ—Ç—ã: –¥–æ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π. –í —Å–ª—É—á–∞–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∫–ª–∏–Ω–∏–∫–∞ –∏–ª–∏ –±–æ—Ç.",
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="‚úÖ –Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏")]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    )
    await state.set_state(QuestionnaireStates.ConfirmRules)
