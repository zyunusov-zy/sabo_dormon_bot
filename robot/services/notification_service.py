import logging
import requests
from django.conf import settings
from ..models import Patient

logger = logging.getLogger(__name__)

class NotificationService:
    def __init__(self):
        self.bot_token = settings.BOT_TOKEN
        self.base_url = f"https://api.telegram.org/bot{self.bot_token}"
    
    def send_message(self, chat_id: str, text: str, parse_mode: str = "HTML"):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
        try:
            url = f"{self.base_url}/sendMessage"
            payload = {
                "chat_id": chat_id,
                "text": text,
                "parse_mode": parse_mode
            }
            
            response = requests.post(url, json=payload, timeout=10)
            
            if response.status_code == 200:
                logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∞—Ü–∏–µ–Ω—Ç—É {chat_id}")
                return True
            else:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {response.text}")
                return False
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")
            return False
    
    def notify_patient_status_change(self, patient: Patient, previous_status: str = None):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞"""
        
        if not patient.bot_user or not patient.bot_user.telegram_id:
            logger.warning(f"–£ –ø–∞—Ü–∏–µ–Ω—Ç–∞ {patient.patient_id} –Ω–µ—Ç telegram_id")
            return False
        
        message = self._build_status_message(patient, previous_status)
        
        return self.send_message(
            chat_id=patient.bot_user.telegram_id,
            text=message
        )
    
    def _build_status_message(self, patient: Patient, previous_status: str = None):
        """–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞"""
        
        messages = {
            "approved_by_doctor": {
                "title": "‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ –≤—Ä–∞—á–æ–º",
                "text": f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –≤—Ä–∞—á–æ–º!\n\n"
                       f"üìã ID –ø–∞—Ü–∏–µ–Ω—Ç–∞: <code>{patient.patient_id}</code>\n"
                       f"üë§ –§–ò–û: {patient.full_name}\n"
                       f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {patient.phone_number}\n\n"
                       f"‚è≥ –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è –æ—Ç –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞..."
            },
            
            "approved_by_accountant": {
                "title": "‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–æ–º", 
                "text": f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–æ–º!\n\n"
                       f"üìã ID –ø–∞—Ü–∏–µ–Ω—Ç–∞: <code>{patient.patient_id}</code>\n"
                       f"üë§ –§–ò–û: {patient.full_name}\n"
                       f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {patient.phone_number}\n\n"
                       f"‚è≥ –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è –æ—Ç –≤—Ä–∞—á–∞..."
            },
            
            "fully_approved": {
                "title": "üü¢ –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–¥–æ–±—Ä–µ–Ω–æ",
                "text": f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–¥–æ–±—Ä–µ–Ω–∞!\n\n"
                       f"üìã ID –ø–∞—Ü–∏–µ–Ω—Ç–∞: <code>{patient.patient_id}</code>\n"
                       f"üë§ –§–ò–û: {patient.full_name}\n"
                       f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {patient.phone_number}\n\n"
                       f"‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ –≤—Ä–∞—á–æ–º\n"
                       f"‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–æ–º\n\n"
                       f"üìù –í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –∫–ª–∏–Ω–∏–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Å–ª—É–≥."
            },
            
            "rejected": {
                "title": "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ",
                "text": f"üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n\n"
                       f"üìã ID –ø–∞—Ü–∏–µ–Ω—Ç–∞: <code>{patient.patient_id}</code>\n"
                       f"üë§ –§–ò–û: {patient.full_name}\n"
                       f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {patient.phone_number}\n\n"
                    #    f"üìù <b>–ü—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:</b>\n"
            }
        }
        
        # if patient.status == "rejected":
        #     reasons = []
        #     if patient.rejected_by_doctor and patient.doctor_comment:
        #         reasons.append(f"üë®‚Äç‚öïÔ∏è –í—Ä–∞—á: {patient.doctor_comment}")
        #     if patient.rejected_by_accountant and patient.accountant_comment:
        #         reasons.append(f"üë©‚Äçüíº –ë—É—Ö–≥–∞–ª—Ç–µ—Ä: {patient.accountant_comment}")
            
        #     if reasons:
        #         messages["rejected"]["text"] += "\n".join(reasons)
        #     else:
        #         messages["rejected"]["text"] += "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞."
            
        #     messages["rejected"]["text"] += "\n\nüîÑ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ, —É—Å—Ç—Ä–∞–Ω–∏–≤ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏."
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
        if patient.status in ["approved_by_doctor", "approved_by_accountant", "fully_approved"]:
            comments = []
            if patient.approved_by_doctor and patient.doctor_comment:
                comments.append(f"üë®‚Äç‚öïÔ∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤—Ä–∞—á–∞: {patient.doctor_comment}")
            if patient.approved_by_accountant and patient.accountant_comment:
                comments.append(f"üë©‚Äçüíº –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞: {patient.accountant_comment}")
            
            if comments:
                messages[patient.status]["text"] += "\n\nüìù <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:</b>\n" + "\n".join(comments)
        
        return messages.get(patient.status, {}).get("text", "–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã –∏–∑–º–µ–Ω–∏–ª—Å—è.")


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
notification_service = NotificationService()